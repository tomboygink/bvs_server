import { UsersEntity } from '../../../../xcore/dbase/Users';
import { IWSResult } from '../../../../xcore/WSQuery';
export declare class AuthFormStorage {
    login: string;
    password: string;
    email: string;
    new_password: string;
    repeat_password: string;
    code: string;
    dt_set_forgPass: string;
    user: UsersEntity;
    cmderror: any;
    alert_forg_pass: string;
    dt: string;
    forgot_pass: boolean;
    email_err: boolean;
    email_err_mess: string;
    login_err: boolean;
    login_err_mess: string;
    errr_new_pass: boolean;
    error_new_message: string;
    errr_repeat_pass: boolean;
    error_repeat_message: string;
    error_code: boolean;
    error_code_mess: string;
    constructor();
    setLogin(val: string): void;
    getLogin(): string;
    setPassword(val: string): void;
    getPassword(): string;
    setUser(u: UsersEntity): void;
    getUser(): UsersEntity;
    setCmderror(u: any): void;
    getCmderror(): any;
    setAlertForgPass(val: any): void;
    getAlertForgPass(): any;
    setdt(u: string): void;
    getdt(): string;
    setForgotPass(u: boolean): void;
    getForgotPass(): boolean;
    set_forgPass(val: string): void;
    get_forgPass(): string;
    setEmail(val: string): void;
    getEmail(): string;
    setNewPass(val: string): void;
    getNewPass(): string;
    setRepeatPass(val: string): void;
    getRepeatPass(): string;
    setError_login(val: boolean): void;
    getError_login(): boolean;
    setLogin_message(val: string): void;
    getLogin_message(): string;
    setError_emain(val: boolean): void;
    getError_emain(): boolean;
    setEmail_message(val: string): void;
    getEmail_message(): string;
    setErrr_new_pass(val: boolean): void;
    getErrr_new_pass(): boolean;
    setError_new_message(val: string): void;
    getError_new_message(): string;
    setError_repeat_pass(val: boolean): void;
    getError_repeat_pass(): boolean;
    setError_repeat_message(val: string): void;
    getError_repeat_message(): string;
    setError_code(val: boolean): void;
    getError_code(): boolean;
    setError_code_mess(val: string): void;
    getError_code_mess(): string;
    setCode(val: string): void;
    getCode(): string;
    get_UserByAuth(): Promise<void>;
    set_ForgPass(): Promise<void>;
    set_SaveNewPass(): Promise<void>;
    setUserWS(dt: IWSResult): void;
    onGetUserByAuth(dt: IWSResult): void;
    onGetUserBySessionCode(dt: IWSResult): void;
    onSaveNewPass(dt: IWSResult): void;
}
