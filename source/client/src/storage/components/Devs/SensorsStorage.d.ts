import { IWSResult } from '../../../../../xcore/WSQuery';
export declare class SensorsStorage {
    dataCharts: any;
    sensors: any;
    open_devsess: boolean;
    dev_sensors: any;
    empty_sess: string;
    sort_desc: string;
    active_button_sort: string;
    active_button_sort_desc: string;
    sess_period_start: string;
    sess_period_end: string;
    anchorEl: string;
    number: string;
    id_dev: string;
    del: boolean;
    id_dev_sess: string;
    chose_sess_time: string;
    akb_chosesess: string;
    sessions_period: Array<any>;
    sessions_first_last_period: Array<any>;
    sess_first: Array<any>;
    sess_second: Array<any>;
    sess_middle: Array<any>;
    example: Array<any>;
    time_dev_firstsess: string;
    time_dev_lastsess: string;
    akb_firstsess: string;
    akb_lastsess: string;
    id_firstsess: string;
    id_lastsess: string;
    old_dev_povs: string;
    start_povs: string;
    end_povs: string;
    array_control_data: Array<number>;
    array_last_data: Array<number>;
    constructor();
    setArrayControlData(val: Array<number>): void;
    getArrayControlData(): Array<number>;
    setTimeDevSessFirst(val: string): void;
    getTimeDevSessFirst(): string;
    setTimeDevSessLast(val: string): void;
    getTimeDevSessLast(): string;
    setAkbSessFirst(val: string): void;
    getAkbSessFirst(): string;
    setAkbSessLast(val: string): void;
    getAkbSessLast(): string;
    setChoseSessTime(val: string): void;
    getChoseSessTime(): string;
    setAkbSessChose(val: string): void;
    getAkbSessChose(): string;
    setdataCharts(val: Array<any>): void;
    getdataCharts(): Array<any>;
    setSessionsPeriod(val: Array<any>): void;
    getSessionsPeriod(): Array<any>;
    setDevSession(val: any): void;
    getDevSession(): any;
    setEmptySession(val: string): void;
    getEmptySession(): string;
    setSensors(val: any): void;
    getSensors(): any;
    setSortDesc(val: string): void;
    getSortDesc(): string;
    setActiveButtonSort(val: string): void;
    getActiveButtonSort(): string;
    setActiveButtonSortDesc(val: string): void;
    getActiveButtonSortDesc(): string;
    setAnchorEl(val: string): void;
    getAnchorEl(): string;
    setSessPeriodStart(val: string): void;
    getSessPeriodStart(): string;
    setSessPeriodEnd(val: string): void;
    getSessPeriodEnd(): string;
    setIdDev(val: string): void;
    getIdDev(): string;
    setNumber(val: string): void;
    getNumber(): string;
    setDeletedDev(val: boolean): void;
    getDeletedDev(): boolean;
    setOpenDevsess(val: boolean): void;
    getOpenDevsess(): boolean;
    setIdDevSess(val: string): void;
    getIdDevSess(): string;
    setSessFirstLast(val: Array<any>): void;
    getSessFirstLast(): Array<any>;
    setSess_first(val: Array<any>): void;
    getSess_first(): Array<any>;
    setSess_second(val: Array<any>): void;
    getSess_second(): Array<any>;
    setSess_middle(val: Array<any>): void;
    getSess_middle(): Array<any>;
    setIdFirstSess(val: string): void;
    getIdFirstSess(): string;
    setIdLastSess(val: string): void;
    getIdLastSess(): string;
    setexample(val: Array<any>): void;
    getexample(): Array<any>;
    setOldDevPovs(val: string): void;
    getOldDevPovs(): string;
    setStartPovs(val: string): void;
    getStartPovs(): string;
    setEndPovs(val: string): void;
    getEndPovs(): string;
    get_DevSessions(name: string, value: any, _options?: any): Promise<void>;
    get_DevFirstLastSessions(name: string, value: any, _options?: any): Promise<void>;
    get_DevPovs(value: any): Promise<void>;
    set_DevPovs(dt: IWSResult): Promise<void>;
    setDevSess(dt: IWSResult): Promise<void>;
    set_DevFirstLastSessions(dt: IWSResult): Promise<void>;
}
