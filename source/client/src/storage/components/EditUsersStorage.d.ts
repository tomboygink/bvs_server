export declare class EditUsersStorage {
    modal_edit_user: boolean;
    id_rows: any;
    open_search: boolean;
    search_famaly: any;
    search_name: any;
    search_father: any;
    search_login: any;
    search_telephone: any;
    search_email: any;
    checkbox_editing: boolean;
    checkbox_reading: boolean;
    family: string;
    name: string;
    father: string;
    email: string;
    telephone: string;
    login: string;
    password: string;
    repeat_password: string;
    info: string;
    key_org: any;
    key_jobs: any;
    active_user: boolean;
    active_user_id: any;
    u_act_mail: boolean;
    error_family: boolean;
    texthelp_family: string;
    error_name: boolean;
    texthelp_name: string;
    error_father: boolean;
    texthelp_father: string;
    error_password: boolean;
    texthelp_password: string;
    error_repeat_password: boolean;
    texthelp_repeat_password: string;
    constructor();
    setOpenSearch(val: boolean): void;
    getOpenSearch(): boolean;
    setSearchFamaly(val: any): void;
    getSearchFamaly(): any;
    setSearchName(val: any): void;
    getSearchName(): any;
    setSearchFather(val: any): void;
    getSearchFather(): any;
    setSearchLogin(val: any): void;
    getSearchLogin(): any;
    setSearchTelephone(val: any): void;
    getSearchTelephone(): any;
    setSearchEmail(val: any): void;
    getSearchEmail(): any;
    setKeyOrg(val: any): void;
    getKeyOrg(): any;
    setKeyJobs(val: any): void;
    getKeyJobs(): any;
    setCheckboxEd(val: boolean): void;
    getCheckboxEd(): boolean;
    setCheckboxRead(val: boolean): void;
    getCheckboxRead(): boolean;
    setModalEditUser(val: boolean): void;
    getModalEditUser(): boolean;
    setIdRows(val: any): void;
    getIdRows(): any;
    setFamily(val: string): void;
    getFamily(): string;
    setName(val: string): void;
    getName(): string;
    setFather(val: string): void;
    getFather(): string;
    setEmail(val: string): void;
    getEmail(): string;
    setTelephone(val: string): void;
    getTelephone(): string;
    setLogin(val: string): void;
    getLogin(): string;
    setPassword(val: string): void;
    getPassword(): string;
    setRepeatPassword(val: string): void;
    getRepeatPassword(): string;
    setStateActive(val: boolean): void;
    getStateActive(): boolean;
    setActive(val: any): void;
    getActive(): any;
    setActMail(val: any): void;
    getActMail(): any;
    setInfo(val: string): void;
    getInfo(): string;
    setErrorFamily(val: boolean): void;
    getErrorFamily(): boolean;
    setTextHelpFamily(val: string): void;
    getTextHelpFamily(): string;
    setErrorName(val: boolean): void;
    getErrorName(): boolean;
    setTextHelpName(val: string): void;
    getTextHelpName(): string;
    setErrorFather(val: boolean): void;
    getErrorFather(): boolean;
    setTextHelpFather(val: string): void;
    getTextHelpFather(): string;
    setErrorPassword(val: boolean): void;
    getErrorPassword(): boolean;
    setTextHelpPassword(val: string): void;
    getTextHelpPassword(): string;
    setErrorRepeatPassword(val: boolean): void;
    getErrorRepeatPassword(): boolean;
    setTextHelpRepeatPassword(val: string): void;
    getTextHelpRepeatPassword(): string;
    get_Jobs(name: string, value: any, _options?: any): Promise<void>;
    set_IdRows(a: any): Promise<void>;
    set_ActMail(name: string, value: any, _options?: any): Promise<void>;
    set_ChangeUser(name: string, value: any, _options?: any): Promise<void>;
}
